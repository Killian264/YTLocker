// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	models "github.com/Killian264/YTLocker/golocker/models"
	mock "github.com/stretchr/testify/mock"
)

// IPlaylistManager is an autogenerated mock type for the IPlaylistManager type
type IPlaylistManager struct {
	mock.Mock
}

// Create provides a mock function with given fields: playlist, user
func (_m *IPlaylistManager) Create(playlist *models.Playlist, user *models.User) (*models.Playlist, error) {
	ret := _m.Called(playlist, user)

	var r0 *models.Playlist
	if rf, ok := ret.Get(0).(func(*models.Playlist, *models.User) *models.Playlist); ok {
		r0 = rf(playlist, user)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Playlist)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*models.Playlist, *models.User) error); ok {
		r1 = rf(playlist, user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Insert provides a mock function with given fields: playlist, video
func (_m *IPlaylistManager) Insert(playlist *models.Playlist, video *models.Video) error {
	ret := _m.Called(playlist, video)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Playlist, *models.Video) error); ok {
		r0 = rf(playlist, video)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Subscribe provides a mock function with given fields: playlist, channel
func (_m *IPlaylistManager) Subscribe(playlist *models.Playlist, channel *models.Channel) {
	_m.Called(playlist, channel)
}

// Unsubscribe provides a mock function with given fields: playlist, channel
func (_m *IPlaylistManager) Unsubscribe(playlist *models.Playlist, channel *models.Channel) {
	_m.Called(playlist, channel)
}
